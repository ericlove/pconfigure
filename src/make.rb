require 'date'

class MakeTarget
	attr_accessor :name
	attr_accessor :deps
	attr_accessor :cmds
	
	def initialize(name)
		@name = name
		@deps = Array.new
		@cmds = Array.new
	end
end

class Makefile
	attr_accessor :targets
	attr_accessor :all
	attr_accessor :clean
	
	def initialize()
		@targets = Array.new
		@all = Array.new
		@clean = Array.new
	end
	
	def write(stream)
		stream.puts("# Makefile autogenerated by pconfigure @ #{DateTime.now.to_s}")
		stream.puts("# Edits will be overwritten")
		stream.puts("SHELL=/bin/bash")
		stream.puts("")
		
		
		all_extra = Array.new
		if (@@pconfopts_doxygen)
			all_extra.push("doc/html/main.html")
		end
		
		stream.puts("all: #{@all.join(" ")} #{all_extra.join(" ")}")
		stream.puts("\t")
		stream.puts("")
		
		stream.puts("some: #{@all.join(" ")}")
		stream.puts("\t")
		stream.puts("")
		
		[@@bindir, @@libdir, @@hdrdir, @@objdir].each{|dir|
			stream.puts("#{dir}/.pconfigure_directory:")
			stream.puts("\tmkdir -p #{dir}")
			stream.puts("\ttouch #{dir}/.pconfigure_directory")
			stream.puts("")
		}
		
		if (@@pconfopts_doxygen)
			stream.puts("doc/html/main.html: #{@all.join(" ")}")
			stream.puts("\tdoxygen Doxyfile > /dev/null")
			stream.puts("")
		end
		
		stream.puts("clean::")
		@clean.each{|to_clean|
			stream.puts("\trm #{to_clean} 2>/dev/null || true")
		}
		if (@@pconfopts_clean)
			stream.puts("\tpclean")
		end
		[@@bindir, @@libdir, @@hdrdir, @@objdir].each{|dir|
			stream.puts("\trm #{dir}/.pconfigure_directory 2>/dev/null || true")
			dir.split("/").size.downto(1){|length|
				subdir = dir.split("/")[0..length-1].join("/")
				stream.puts("\trmdir #{subdir} 2>/dev/null || true")
			}
		}
		stream.puts("")
		
		extras = ""
		if (@@pconfopts_regen)
			extras = "Makefile"
		end
		
		@targets.each{|target|
			stream.puts("#{target.name}: #{extras} #{target.deps.join(" ")}")
			target.cmds.each{|cmd|
				stream.puts("\t#{cmd}")
			}
			stream.puts("")
		}
		
# 		stream.puts("Makefile: Configfile")
# 		stream.puts("\t#{`which pconfigure`.strip}")
# 		stream.puts("\tfalse")
	end
end
